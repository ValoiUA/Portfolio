"use client";
import React, { useEffect, useState } from "react";

const translations = {
  en: {
    sections: [
      { label: "About", link: "about" },
      { label: "Skills", link: "skills" },
      { label: "Contact", link: "contact" },
      { label: "GitHub", link: "https://github.com/ValoiUA" },
      { label: "Projects", link: "projects" },
    ],
    title: "QuantCoder",
    intro: "Hi, I'm",
    experience: "Commercial experience:",
    aboutText: `
      My coding journey started with simple <b>console applications</b> and experimenting with <b>game development</b> on my old PC. The magic of seeing code come to life in the form of a game or a tool instantly hooked me. I quickly moved on to building more complex projects ‚Äî from small games and desktop utilities to backend services and web apps.<br /><br />
      I have hands-on experience with a wide range of technologies: <b>JavaScript</b> (and TypeScript), <b>Java</b>, <b>C#</b>, <b>C++</b>, and even some Python and Go for scripting and automation. My favorite playgrounds are <b>React</b>, <b>Node.js</b>, and <b>Next.js</b>, but I'm always curious to try new frameworks and stacks.<br /><br />
      As a <b>freelancer</b>, I've worked on everything from interactive web dashboards and multiplayer game servers to custom desktop tools and automation scripts. I love the challenge of jumping into a new codebase, understanding the client's vision, and delivering real value ‚Äî whether it's a fast prototype or a production-ready system.<br /><br />
      <b>Game development</b> taught me the importance of performance and optimization, while building <b>console utilities</b> and <b>server-side apps</b> sharpened my skills in system design and debugging. I enjoy switching between frontend and backend, and I'm comfortable working with both <b>SQL</b> and <b>NoSQL</b> databases, deploying apps on cloud servers, and integrating third-party APIs.<br /><br />
      My approach is simple: <b>solve real problems, write clean code, and never stop learning</b>. I believe that the best solutions come from a mix of curiosity, persistence, and a bit of creative chaos. I love collaborating with other developers, sharing ideas, and building products that make a difference.<br /><br />
      Whether it's designing a scalable backend, building a pixel-perfect UI, or optimizing a database query, I always strive to push the boundaries of what's possible with code. If you're looking for someone who can bring both technical expertise and creative energy to your project ‚Äî let's connect!
    `,
    dbTitle: "Databases",
    dbDesc: `
      Confident with both <b>SQL</b> &amp; <b>NoSQL</b> databases.<br />
      Experienced in data modeling, query optimization, migrations, and integrating DBs with Node.js, Java, and C# backends.<br />
      Love building scalable architectures and tuning performance for high-load systems.
    `,
  },
  ua: {
    sections: [
      { label: "–ü—Ä–æ –º–µ–Ω–µ", link: "about" },
      { label: "–ù–∞–≤–∏—á–∫–∏", link: "skills" },
      { label: "–ö–æ–Ω—Ç–∞–∫—Ç–∏", link: "contact" },
      { label: "GitHub", link: "https://github.com/ValoiUA" },
      { label: "–ü—Ä–æ—î–∫—Ç–∏", link: "projects" },
    ],
    title: "QuantCoder",
    intro: "–ü—Ä–∏–≤—ñ—Ç, —è",
    experience: "–ö–æ–º–µ—Ä—Ü—ñ–π–Ω–∏–π –¥–æ—Å–≤—ñ–¥:",
    aboutText: `
      –ú–æ—è –ø–æ–¥–æ—Ä–æ–∂—å —É –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—ñ –ø–æ—á–∞–ª–∞—Å—å –∑ –ø—Ä–æ—Å—Ç–∏—Ö <b>–∫–æ–Ω—Å–æ–ª—å–Ω–∏—Ö –ø—Ä–æ–≥—Ä–∞–º</b> —Ç–∞ –µ–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ñ–≤ –∑ <b>—Ä–æ–∑—Ä–æ–±–∫–æ—é —ñ–≥–æ—Ä</b> –Ω–∞ –º–æ—î–º—É —Å—Ç–∞—Ä–æ–º—É –∫–æ–º–ø'—é—Ç–µ—Ä—ñ. –ú–∞–≥—ñ—è –±–∞—á–µ–Ω–Ω—è –∫–æ–¥—É, —â–æ –æ–∂–∏–≤–∞—î —É —Ñ–æ—Ä–º—ñ —ñ–≥—Ä–∏ –∞–±–æ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—É, –≤—Ä–∞–∑—É –∑–∞—Ö–æ–ø–∏–ª–∞ –º–µ–Ω–µ. –Ø —à–≤–∏–¥–∫–æ –ø–µ—Ä–µ–π—à–æ–≤ –¥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±—ñ–ª—å—à —Å–∫–ª–∞–¥–Ω–∏—Ö –ø—Ä–æ–µ–∫—Ç—ñ–≤ - –≤—ñ–¥ –º–∞–ª–µ–Ω—å–∫–∏—Ö —ñ–≥–æ—Ä —Ç–∞ –¥–µ—Å–∫—Ç–æ–ø–Ω–∏—Ö —É—Ç–∏–ª—ñ—Ç –¥–æ —Å–µ—Ä–≤–µ—Ä–Ω–∏—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤ —Ç–∞ –≤–µ–±-–¥–æ–¥–∞—Ç–∫—ñ–≤.<br /><br />
      –£ –º–µ–Ω–µ —î –ø—Ä–∞–∫—Ç–∏—á–Ω–∏–π –¥–æ—Å–≤—ñ–¥ —Ä–æ–±–æ—Ç–∏ –∑ —à–∏—Ä–æ–∫–∏–º —Å–ø–µ–∫—Ç—Ä–æ–º —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π: <b>JavaScript</b> (—Ç–∞ TypeScript), <b>Java</b>, <b>C#</b>, <b>C++</b>, –∞ —Ç–∞–∫–æ–∂ Python —Ç–∞ Go –¥–ª—è —Å–∫—Ä–∏–ø—Ç—ñ–≤ —Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó. –ú–æ—ó —É–ª—é–±–ª–µ–Ω—ñ –º—ñ—Å—Ü—è –¥–ª—è –µ–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ñ–≤ - —Ü–µ <b>React</b>, <b>Node.js</b> —Ç–∞ <b>Next.js</b>, –∞–ª–µ —è –∑–∞–≤–∂–¥–∏ –∑–∞—Ü—ñ–∫–∞–≤–ª–µ–Ω–∏–π —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –Ω–æ–≤—ñ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏ —Ç–∞ —Å—Ç–µ–∫–∏.<br /><br />
      –Ø–∫ <b>—Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä</b>, —è –ø—Ä–∞—Ü—é–≤–∞–≤ –Ω–∞–¥ —É—Å—ñ–º - –≤—ñ–¥ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏—Ö –≤–µ–±-–ø–∞–Ω–µ–ª–µ–π —Ç–∞ —Å–µ—Ä–≤–µ—Ä—ñ–≤ –¥–ª—è —ñ–≥–æ—Ä –¥–æ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏—Ö –¥–µ—Å–∫—Ç–æ–ø–Ω–∏—Ö —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ —Ç–∞ —Å–∫—Ä–∏–ø—Ç—ñ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó. –Ø –ª—é–±–ª—é –≤–∏–∫–ª–∏–∫, —è–∫–∏–π –ø—Ä–∏–Ω–æ—Å–∏—Ç—å —Ä–æ–±–æ—Ç–∞ –∑ –Ω–æ–≤–∏–º –∫–æ–¥–æ–º, —Ä–æ–∑—É–º—ñ–Ω–Ω—è –≤—ñ–∑—ñ–æ–Ω—É –∫–ª—ñ—î–Ω—Ç–∞ —Ç–∞ –Ω–∞–¥–∞–Ω–Ω—è —Ä–µ–∞–ª—å–Ω–æ—ó —Ü—ñ–Ω–Ω–æ—Å—Ç—ñ - —á–∏ —Ç–æ —à–≤–∏–¥–∫–∏–π –ø—Ä–æ—Ç–æ—Ç–∏–ø, —á–∏ –≥–æ—Ç–æ–≤–∞ –¥–æ –≤–∏–ø—É—Å–∫—É —Å–∏—Å—Ç–µ–º–∞.<br /><br />
      <b>–†–æ–∑—Ä–æ–±–∫–∞ —ñ–≥–æ—Ä</b> –Ω–∞–≤—á–∞–ª–∞ –º–µ–Ω–µ –≤–∞–∂–ª–∏–≤–æ—Å—Ç—ñ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —Ç–∞ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó, –ø–æ–∫–∏ —Ä–æ–∑—Ä–æ–±–∫–∞ <b>–∫–æ–Ω—Å–æ–ª—å–Ω–∏—Ö —É—Ç–∏–ª—ñ—Ç</b> —Ç–∞ <b>—Å–µ—Ä–≤–µ—Ä–Ω–∏—Ö –¥–æ–¥–∞—Ç–∫—ñ–≤</b> –Ω–µ –∑–º—ñ—Ü–Ω—é–≤–∞–ª–∞ –º–æ—ó –Ω–∞–≤–∏—á–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º—É –¥–∏–∑–∞–π–Ω—ñ —Ç–∞ –¥–µ–±–∞–≥—ñ–Ω–≥—É. –Ø –Ω–∞—Å–æ–ª–æ–¥–∂—É—é—Å—è –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è–º –º—ñ–∂ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º —Ç–∞ –±–µ–∫–µ–Ω–¥–æ–º, —ñ —è –≤—ñ–ª—å–Ω–æ –ø—Ä–∞—Ü—é—é –∑ –æ–±–æ–º–∞ <b>SQL</b> —Ç–∞ <b>NoSQL</b> –±–∞–∑–∞–º–∏ –¥–∞–Ω–∏—Ö, —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è–º –¥–æ–¥–∞—Ç–∫—ñ–≤ –Ω–∞ —Ö–º–∞—Ä–Ω–∏—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö —Ç–∞ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—î—é –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö API.<br /><br />
      –ú—ñ–π –ø—ñ–¥—Ö—ñ–¥ –ø—Ä–æ—Å—Ç–∏–π: <b>—Ä–æ–∑–≤'—è–∑—É–≤–∞—Ç–∏ —Ä–µ–∞–ª—å–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏, –ø–∏—Å–∞—Ç–∏ —á–∏—Å—Ç–∏–π –∫–æ–¥ —Ç–∞ –Ω—ñ–∫–æ–ª–∏ –Ω–µ –∑—É–ø–∏–Ω—è—Ç–∏—Å—è –≤ –Ω–∞–≤—á–∞–Ω–Ω—ñ</b>. –Ø –≤—ñ—Ä—é, —â–æ –Ω–∞–π–∫—Ä–∞—â—ñ —Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–∏—Ö–æ–¥—è—Ç—å –≤—ñ–¥ –∑–º—ñ—à–∞–Ω–Ω—è –ª—é–±–æ–ø–∏—Ç—Å—Ç–≤–∞, –Ω–∞–ø–æ–ª–µ–≥–ª–∏–≤–æ—Å—Ç—ñ —Ç–∞ —Ç—Ä–æ—Ö–∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–≥–æ —Ö–∞–æ—Å—É. –Ø –ª—é–±–ª—é —Å–ø—ñ–≤–ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ —ñ–Ω—à–∏–º–∏ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞–º–∏, –¥—ñ–ª–∏—Ç–∏—Å—è —ñ–¥–µ—è–º–∏ —Ç–∞ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–∏, —è–∫—ñ —Ä–æ–±–ª—è—Ç—å —Ä—ñ–∑–Ω–∏—Ü—é.<br /><br />
      –ù–µ–∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–æ–≥–æ, —á–∏ —Ü–µ –¥–∏–∑–∞–π–Ω –º–∞—Å—à—Ç–∞–±–Ω–æ–≥–æ –±–µ–∫–µ–Ω–¥—É, —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—ñ–∫—Å–µ–ª—å–Ω–æ-—Ç–æ—á–Ω–æ–≥–æ UI —á–∏ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –∑–∞–ø–∏—Ç—É –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö, —è –∑–∞–≤–∂–¥–∏ –Ω–∞–º–∞–≥–∞—é—Å—è –≤–∏—Å—É–Ω—É—Ç–∏ –º–µ–∂—ñ —Ç–æ–≥–æ, —â–æ –º–æ–∂–ª–∏–≤–æ –∑ –∫–æ–¥–æ–º. –Ø–∫—â–æ –≤–∏ —à—É–∫–∞—î—Ç–µ –∫–æ–≥–æ—Å—å, —Ö—Ç–æ –º–æ–∂–µ –ø—Ä–∏–Ω–µ—Å—Ç–∏ —è–∫ —Ç–µ—Ö–Ω—ñ—á–Ω—É –µ–∫—Å–ø–µ—Ä—Ç–∏–∑—É, —Ç–∞–∫ —ñ –∫—Ä–µ–∞—Ç–∏–≤–Ω—É –µ–Ω–µ—Ä–≥—ñ—é –¥–æ –≤–∞—à–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É - –¥–∞–≤–∞–π—Ç–µ –∑–≤'—è–∂–µ–º–æ—Å—å!
    `,
    dbTitle: "–ë–∞–∑–∏ –¥–∞–Ω–∏—Ö",
    dbDesc: `
      –í–ø–µ–≤–Ω–µ–Ω–∞ —Ä–æ–±–æ—Ç–∞ –∑ –æ–±–æ—î—é <b>SQL</b> —Ç–∞ <b>NoSQL</b> –±–∞–∑–∞–º–∏ –¥–∞–Ω–∏—Ö.<br />
      –î–æ—Å–≤—ñ–¥ –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö, –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó –∑–∞–ø–∏—Ç—ñ–≤, –º—ñ–≥—Ä–∞—Ü—ñ–π —Ç–∞ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó –ë–î –∑ Node.js, Java —Ç–∞ C# –±–µ–∫–µ–Ω–¥–∞–º–∏.<br />
      –õ—é–±–ª—é —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –º–∞—Å—à—Ç–∞–±–Ω—ñ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∏ —Ç–∞ –Ω–∞–ª–∞—à—Ç–æ–≤—É–≤–∞—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –¥–ª—è —Å–∏—Å—Ç–µ–º –∑ –≤–∏—Å–æ–∫–æ—é –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ—Å—Ç—é.
    `,
  }
};

export default function About() {
  const [lang, setLang] = useState("en");
  const t = translations[lang];

  // –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ –º–æ–≤—É –≤ localStorage
  useEffect(() => {
    const saved = typeof window !== "undefined" ? localStorage.getItem("main_lang") : null;
    if (saved && (saved === "en" || saved === "ua")) setLang(saved);
  }, []);
  useEffect(() => {
    if (typeof window !== "undefined") localStorage.setItem("main_lang", lang);
  }, [lang]);

  return (
    <section className="relative min-h-screen w-full flex items-center justify-center font-mono overflow-hidden bg-transparent">
      {/* Language Switcher */}
      <div className="lang-switcher">
        <button
          className={lang === "ua" ? "active" : ""}
          onClick={() => setLang("ua")}
          aria-label="–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞"
          type="button"
        >üá∫üá¶</button>
        <button
          className={lang === "en" ? "active" : ""}
          onClick={() => setLang("en")}
          aria-label="English"
          type="button"
        >üá¨üáß</button>
      </div>

      {/* Animated neon background */}
      <div className="fixed inset-0 z-0 pointer-events-none about-bg-anim-tw"></div>
      <div className="fixed inset-0 z-0 pointer-events-none about-bg-anim2-tw"></div>
      <div className="about-card-tw relative z-10 bg-gradient-to-br from-[#181c37ee] to-[#232942ee] rounded-2xl shadow-[0_8px_48px_0_#181c37cc,0_0_0_2.5px_#39ff1466] px-8 py-12 max-w-2xl w-[96vw] text-center text-[#e3f6ff] overflow-hidden animate-aboutFadeIn">
        <h2 className="text-4xl font-bold mb-4 tracking-wide text-shadow-lg relative z-10">
          {t.intro} <span className="text-[#39ff14] drop-shadow-[0_0_16px_#39ff14cc]">{t.title}</span>
        </h2>
        <p className="text-lg mb-6 text-[#00f0ff] font-semibold tracking-wide relative z-10">
          {t.experience} <b>1.5 years</b>
        </p>
        <p className="about-desc-tw text-lg text-[#e3f6ffcc] leading-8 relative z-10 animate-aboutTextFade" dangerouslySetInnerHTML={{ __html: t.aboutText }} />

        {/* Databases Block */}
        <div className="db-card-tw relative mx-auto mt-10 mb-6 px-6 py-7 max-w-md bg-gradient-to-br from-[#161d2b] to-[#232942] rounded-xl shadow-[0_0_36px_0_#39ff1433,0_0_0_2.5px_#39ff14cc] text-[#e3f6ff] text-center text-base overflow-hidden">
          <div className="db-title-tw text-lg font-bold text-[#39ff14] mb-3 tracking-wide drop-shadow-[0_0_12px_#39ff14cc] relative z-10">
            {t.dbTitle}
          </div>
          <div className="db-list-tw flex flex-wrap gap-x-4 gap-y-2 justify-center mb-3 relative z-10">
            <span className="db-badge-tw">PostgreSQL</span>
            <span className="db-badge-tw">MySQL</span>
            <span className="db-badge-tw">MongoDB</span>
            <span className="db-badge-tw">SQLite</span>
          </div>
          <div className="db-desc-tw text-[#e3f6ffcc] text-sm mt-2 leading-relaxed relative z-10" dangerouslySetInnerHTML={{ __html: t.dbDesc }} />
        </div>
      </div>

      {/* Custom styles for pseudo-elements and animation */}
      <style jsx>{`
        .lang-switcher {
          position: absolute;
          top: 22px;
          right: 38px;
          z-index: 50;
          display: flex;
          gap: 0.5em;
        }
        .lang-switcher button {
          background: none;
          border: none;
          font-size: 1.7em;
          cursor: pointer;
          filter: grayscale(0.4) brightness(0.95);
          opacity: 0.7;
          transition: filter 0.2s, opacity 0.2s, transform 0.18s;
          outline: none;
        }
        .lang-switcher button.active, .lang-switcher button:hover {
          filter: none;
          opacity: 1;
          transform: scale(1.14);
          text-shadow: 0 0 7px #39ff14cc;
        }
        /* Neon animated backgrounds */
        .about-bg-anim-tw {
          background: radial-gradient(ellipse at 60% 40%, #1e2a4dcc 0%, #0a101a 85%);
          opacity: 0.95;
          animation: aboutBgMove 18s ease-in-out infinite alternate;
        }
        .about-bg-anim2-tw {
          background: conic-gradient(from 190deg, #181c37 0%, #0a101a 60%, #232942 100%);
          mix-blend-mode: lighten;
          opacity: 0.38;
          animation: aboutBgMove2 24s ease-in-out infinite alternate;
        }
        @keyframes aboutBgMove {
          0% { background-position: 60% 40%; }
          100% { background-position: 40% 60%; }
        }
        @keyframes aboutBgMove2 {
          0% { background-position: 70% 30%; }
          100% { background-position: 30% 70%; }
        }
        /* About card pseudo-elements for neon glow */
        .about-card-tw::before {
          content: "";
          position: absolute;
          inset: -16px;
          border-radius: 2rem;
          background: radial-gradient(circle at 70% 30%, #39ff1422 0%, #00f0ff22 80%, transparent 100%);
          z-index: 0;
          pointer-events: none;
          animation: aboutAura 3.4s ease-in-out infinite alternate;
        }
        .about-card-tw::after {
          content: "";
          position: absolute;
          inset: -12px;
          border-radius: 2.2rem;
          border: 2.5px solid #39ff14cc;
          opacity: 0.13;
          filter: blur(1.5px);
          z-index: 0;
          pointer-events: none;
        }
        @keyframes aboutAura {
          0% { opacity: 0.16; }
          100% { opacity: 0.32; }
        }
        /* About card fade-in */
        .animate-aboutFadeIn {
          animation: aboutFadeIn 1.1s cubic-bezier(.4,1.4,.5,1) both;
        }
        @keyframes aboutFadeIn {
          0% { opacity: 0; transform: translateY(32px) scale(0.97);}
          100% { opacity: 1; transform: translateY(0) scale(1);}
        }
        .about-desc-tw {
          animation: aboutTextFade 1.8s cubic-bezier(.4,1.4,.5,1) both;
        }
        @keyframes aboutTextFade {
          0% { opacity: 0; transform: translateY(18px);}
          100% { opacity: 1; transform: translateY(0);}
        }
        /* DB card pseudo-elements for neon glow */
        .db-card-tw::before,
        .db-card-tw::after {
          content: "";
          position: absolute;
          inset: -7px;
          border-radius: 1.25rem;
          pointer-events: none;
          z-index: 0;
          transition: opacity 0.26s;
        }
        .db-card-tw::before {
          background: linear-gradient(120deg, #39ff14 0%, #00f0ff 80%, #ff2fd6 100%);
          opacity: 0.18;
          filter: blur(7px);
          animation: dbAura 3.5s ease-in-out infinite alternate;
        }
        .db-card-tw::after {
          border: 2.5px solid #39ff14cc;
          opacity: 0.24;
          filter: blur(1.5px);
        }
        @keyframes dbAura {
          0% { opacity: 0.14; }
          100% { opacity: 0.32; }
        }
        .db-badge-tw {
          background: rgba(57,255,20,0.11);
          border: 1.2px solid #39ff14cc;
          border-radius: 0.5rem;
          padding: 0.25em 1em;
          color: #39ff14;
          font-size: 1rem;
          font-weight: 600;
          margin-bottom: 0.2em;
          box-shadow: 0 0 6px #39ff1433;
          transition: background 0.18s, color 0.18s;
          cursor: pointer;
          display: inline-block;
        }
        .db-badge-tw:hover {
          background: #39ff14;
          color: #181c37;
        }
      `}</style>
    </section>
  );
}